// <auto-generated />
using System;
using CatalogMinimalAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CatalogMinimalAPI.Migrations
{
    [DbContext(typeof(CatalogContext))]
    partial class CatalogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CatalogMinimalAPI.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Material Escolar",
                            Nome = "Material Escolar"
                        });
                });

            modelBuilder.Entity("CatalogMinimalAPI.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Preco")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            DataCompra = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Caderno espiral 100 folhas",
                            ImagemUrl = "http://www.macoratti.net/Imagens/produtos/caderno.jpg",
                            Nome = "Caderno",
                            Preco = 7.45m,
                            Quantidade = 10
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 1,
                            DataCompra = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Borracha branca pequena",
                            ImagemUrl = "http://www.macoratti.net/Imagens/produtos/borracha.jpg",
                            Nome = "Borracha",
                            Preco = 3.75m,
                            Quantidade = 20
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 1,
                            DataCompra = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Estojo escolar transparente",
                            ImagemUrl = "http://www.macoratti.net/Imagens/produtos/estojo.jpg",
                            Nome = "Estojo",
                            Preco = 5.50m,
                            Quantidade = 15
                        },
                        new
                        {
                            Id = 4,
                            CategoriaId = 1,
                            DataCompra = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Apontador com depósito",
                            ImagemUrl = "http://www.macoratti.net/Imagens/produtos/apontador.jpg",
                            Nome = "Apontador",
                            Preco = 4.75m,
                            Quantidade = 30
                        },
                        new
                        {
                            Id = 5,
                            CategoriaId = 1,
                            DataCompra = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Caneta esferográfica azul",
                            ImagemUrl = "http://www.macoratti.net/Imagens/produtos/caneta.jpg",
                            Nome = "Caneta",
                            Preco = 1.50m,
                            Quantidade = 40
                        });
                });

            modelBuilder.Entity("CatalogMinimalAPI.Models.Produto", b =>
                {
                    b.HasOne("CatalogMinimalAPI.Models.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("CatalogMinimalAPI.Models.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
